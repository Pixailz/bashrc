#!/bin/bash

function	install::font()
{
	local	font_name="${1?}"
	local	font_link="${2?}"
	local	dir_font

	dir_font="${DIR_FONT}/${font_name}"
	if [ ! -d "${dir_font}" ]; then
		log::info "installing ${ORE}${font_name}${RST}" 1
		curl::warp "${font_link}" tmp.zip
		unzip -o tmp.zip -d "${dir_font}"
		rm -f tmp.zip
		log::pass "installed ${GRE}${dir_font}${RST}"
	else
		log::info "${font_name} already installed" 1
	fi
}

## BINDED FUNCTION

function	pre::install::fonts()
{
	case ${OS_ID} in
		termux) 			DIR_FONT="${HOME}/.termux"					;;
		ubuntu|kali|debian|arch)	DIR_FONT="${HOME}/.local/share/fonts"	;;
	esac
	export DIR_FONT
}

function	install::fonts()
{
	for font_name in ${!FONTS_LINK[@]}; do
		install::font "${font_name}" "${FONTS_LINK[${font_name}]}"
	done
	log::info "you can select your font in the terminal settings" 1
}

function	post::install::fonts()
{
	[ -f tmp.zip ] && rm -f tmp.zip
	[ ${OS_ID} == "termux" ] && termux-reload-settings
	unset DIR_FONT
}

# Start
function	module::start()
{
	local	base="${BASH_SOURCE[0]?}"

	# remove filename
	base="${base/install/}"
	# if base dir is relative, suffix PWD to base
	if [[ ${base} =~ ^\./.*$ ]]; then
		base="${PWD}/${base}"
	fi
	# if not sourced, BASH_SOURCE keep current file when $0 keep launched file
	if [ "${BASH_SOURCE[0]}" -ef "${0}" ]; then
		source "${base}../../dot"
		source "${base}${MOD_CONFIG_FILE}"
		## BINDED FUNCTION
		module::install "${MOD_NAME}"
	fi
}

module::start
