#!/bin/bash

function	post::install::batcat()
{
	if [ "${SKIP_BATCAT}" == "1" ]; then
		unset SKIP_BATCAT
		return
	fi
	print::warn "rebuilding ${O}batcat${RST} cache"
	batcat cache --build 1>/dev/null
	print::pass "batcat ${G}configured${RST}"
}

function	install::batcat::themes()
{
	if [ -z $(type -t batcat) ]; then
		print::warn "batcat not installed, skipping"
		export SKIP_BATCAT=1
		return
	fi
	for theme in "${BATCAT_DIR_BASE_IN}"/*; do
		if [[ ${theme} =~ .*\.tmTheme ]]; then
			utils::move_file ${theme} "${BATCAT_DIR_BASE_OUT}/${theme##*/}"
		fi
	done
}

function	install::batcat::config()
{
	utils::move_file ${BATCAT_CONF_FILE_IN} ${BATCAT_CONF_FILE_OUT}
}

function	install::batcat()
{

	install::batcat::config
	install::batcat::themes
}

# if not sourced, BASH_SOURCE keep current file when $0 keep launched file
if [ "${BASH_SOURCE[0]}" -ef "${0}" ]; then
	if [ "${0}" -ef "install" ]; then
		source ../../run
	elif [ "${0}" -ef "batcat/install" ]; then
		source ../run
	else
		source ./run
	fi
	install::batcat
	post::install::batcat
fi
